package cs320.fe;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import cs320.fe.LibraryBean;


@WebServlet("/ViewLibrary")
public class ViewLibrary extends HttpServlet {
	private static final long serialVersionUID = 1L;
       

    public ViewLibrary() {
        super();

    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		String search = request.getParameter("search");
		
		ArrayList<LibraryBean> cd = new ArrayList<LibraryBean>();
		ArrayList<LibraryBean> dvd = new ArrayList<LibraryBean>();
		ArrayList<LibraryBean> blueray = new ArrayList<LibraryBean>();

		if(search == null) {
			search="";
		}
		
		Connection c = null;
		 try
	        {
			 String url = "jdbc:mysql://cs3.calstatela.edu:3306/cs320stu72";
	         String username = "cs320stu72";
	         String password = "cOdJJKy!";
		
	         c = DriverManager.getConnection( url, username, password );
	            Statement stmt = c.createStatement();
	                   

	            ResultSet rs;

	            if(!search.equals(""))
	    		{
	            	String que=    (  new StringBuilder("SELECT * FROM MediaLibrary WHERE (Type = 'CD') AND ((name Like '%")).append(search).append("%') OR (Borrower Like '%").append(search).append("%'))").toString();	
	            	  rs = stmt.executeQuery( que);
	    		}
	            else
	            {
	            	   rs = stmt.executeQuery( "select * from MediaLibrary WHERE (Type = 'CD')");
	            }
	           
	            while( rs.next() )
	            {
	            	LibraryBean entry = new LibraryBean( rs.getInt( "Id" ), rs.getString( "Type" ), rs.getString( "Name" ), rs.getDate("DateAdded"), rs.getBoolean("OnLoan"), rs.getDate("DateBorrowed"), rs.getString("borrower"));
	                entry.add( entry );
	            }
	            
	            
	            
	            ResultSet rsdvd ;
	            
	            if(!name.equals(""))
	    		{
	            	String que=    (  new StringBuilder("SELECT * FROM MediaLibrary WHERE (Type = 'DVD') AND ((name Like '%")).append(search).append("%') OR (Borrower Like '%").append(search).append("%'))").toString();	
	            	rsdvd = stmt.executeQuery( que); 
	    		}
	            else
	            {
	            	   rsdvd = stmt.executeQuery( "select * from MediaLibrary WHERE (Type = 'DVD')" );
	            }
	            
	            while( rsdvd.next() )
	            {
	            	LibraryBean entry1 = new LibraryBean( rsdvd.getInt( "Id" ), rsdvd.getString( "Type" ), rsdvd.getString( "Name" ), rsdvd.getDate("DateAdded"), rsdvd.getBoolean("OnLoan"), rsdvd.getDate("DateBorrowed"), rsdvd.getString("borrower"));
	                cdatadvd.add( entry1 );
	            }
	            
	            
	            
	            ResultSet rsbr;
	            
	            if(!name.equals(""))
	    		{
	            	String que=    (  new StringBuilder("SELECT * FROM MediaLibrary WHERE (Type = 'BlueRay') AND ((name Like '%")).append(search).append("%') OR (borrower Like '%").append(search).append("%'))").toString();	
	            	rsbr = stmt.executeQuery( que);     
	    		}
	            else
	            {
	            	rsbr = stmt.executeQuery( "select * from MediaLibrary WHERE (Type = 'BlueRay')" );
	            }
	                      
	            while( rsbr.next() )
	            {
	            	LibraryBean entry2 = new LibraryBean( rsbr.getInt( "Id" ), rsbr.getString( "Type" ), rsbr.getString( "Name" ), rsbr.getDate("DateAdded"), rsbr.getBoolean("OnLoan"), rsbr.getDate("DateBorrowed"), rsbr.getString("Borrower"));
	                cdatabr.add( entry2 );
	            }
	            
	         
		}
		catch (SQLException e) {
			throw new ServletException(e);
		}
	
		finally {
			try {
				if ( c!=null) {
					c.close();
				}
			} catch (SQLException e) {
				throw new ServletException(e);
			}
		
		}
		
		request.setAttribute("cd", cd);
		request.setAttribute("dvd", dvd);
		request.setAttribute("blueray", blueray);
		
		request.getRequestDispatcher("/ViewLibrary.jsp").forward(request, response);

	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		doGet(request, response);

	}

}
